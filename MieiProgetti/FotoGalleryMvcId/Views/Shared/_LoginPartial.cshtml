@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@{
    //memorizzo Alias e icona dell'utente
    var user = await UserManager.GetUserAsync(User);
    if (user != null)
    {
        ViewBag.Alias = user.Alias;

        ViewBag.Icona = user.Ruoli.Contains("Master") ? "bi-person-lock" : //icona master
        user.Ruoli.Contains("Admin") ? "bi-person-gear" : //icona admin
        user.Ruoli.Contains("Moderatore") ? "bi-person-plus" : //icona moderatore
        "bi-person"; //icona user

    }

}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link btn btn-link text-dark p-1" asp-area="Identity" asp-page="/Account/Manage/Index"
                title="Manage">
                <i class="bi @ViewBag.Icona" style="font-size: 1.25rem;"> @ViewBag.Alias</i>
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
